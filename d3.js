/* ---------------------- JAVASCRIPT ---------------------- */
console.log("Javascript loaded!");

/* ---------------------- D3 BABY ---------------------- */

// Data (taken from the JSON generated by crunching #s from the HuffPost API)
var barData = {'Perry': 17, 'Roemer': 2, 'Christie': 69, 'Carson': 277, 
	       'Bush': 183, 'Other': 73, 'Undecided': 899, 'Collins': 59,
	       'Bellows': 20, 'Foley': 14, 'Sanders': 1230, 'No Answer': 3,
	       'Huntsman': 17, 'Refused': 6, 'Cruz': 972, 'Slone': 1,
	       "Don't Know": 56, 'Not Voting': 4, 'Obama': 62,
	       'Will not vote': 4, 'Not Sure': 18, 'Pataki': 0,
	       'Santorum': 488, 'Janssen': 6, 'Bachmann': 6, 'Ricketts': 16,
	       'Walker': 75, 'Bruning': 34, 'Judd': 1, 'McCoy': 5,
	       "O'Malley": 5, 'Jindal': 1, 'Farrell': 6, 'Clinton': 1376,
	       'Trump': 1646, 'Carlson': 5, 'Romney': 808, 'Rubio': 668,
	       'Huckabee': 63, 'Fiorina': 35, 'Gilmore': 0, 'Kasich': 468,
	       'Someone else/Not sure': 9, 'Paul': 322, 'Gingrich': 350,
	       'Graham': 0};
var names = d3.keys(barData);
var votes = names.map(function(key){ return barData[key];});

// Bar Graph

// The initial variable setup
var margin_top = 50;
var margin_bottom = 50;
var margin_right = 50;
var margin_left = 50;

var bar_width = 1350 - margin_left - margin_right;
var bar_height = 500 - margin_top - margin_bottom;

var x = d3.scale.ordinal()
    .rangeRoundBands([0,bar_width],.05)
    .domain(names);

var y = d3.scale.linear()
    .domain([0,d3.max(votes)])
    .range([bar_height,0]);

// Formatting the axes
var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var svg = d3.select("body").append("svg")
    .attr("width", margin_left + bar_width + margin_right)
    .attr("height", margin_bottom + bar_height + margin_top)
    .append("g")
    .attr("transform", "translate(" + margin_left + "," + margin_top + ")");

svg.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + bar_height + ")")
    .call(xAxis)
    .selectAll("text")
    .style("text-anchor", "end")
    .attr("dx", "-.8em")
    .attr("dy", "-.55em")
    .attr("transform", "rotate(-90)" );

svg.append("g")
    .attr("class", "y axis")
    .call(yAxis)
    .append("text")
    .attr("transform", "rotate(-90)")
    .attr("y", 6)
    .attr("dy", ".71em")
    .style("text-anchor", "end")
    .text("Votes");

svg.selectAll("bar")
    .data(names)
    .enter().append("rect")
    .style("fill", "steelblue")
    .attr("x", function(d) { return x(d); })
    .attr("width", x.rangeBand())
    .attr("y", function(d) { return y(barData[d]); })
    .attr("height", function(d) { return (bar_height - y(barData[d])); });

/*
// Pie Chart

var pie_width = 960;
var pie_height = 500;
var radius = Math.min(pie_width, pie_height) / 2;

var color = d3.scale.ordinal()
    .range(["#98abc5", "#8a89a6", "#7b6888", "#6b486b", "#a05d56", "#d0743c", "#ff8c00"]);

var arc = d3.svg.arc()
    .outerRadius(radius - 15)
    .innerRadius(0);

var labelArc = d3.svg.arc()
    .outerRadius(radius - 30)
    .innerRadius(radius - 30);

var pie = d3.layout.pie()
    .sort(null)
    .value(function(d) { return d.value; });

var svg = d3.select("body").append("svg")
    .attr("width", pie_width)
    .attr("height", pie_height)
  .append("g")
    .attr("transform", "translate(" + pie_width / 2 + "," + pie_height / 2 + ")");

d3.csv("data.csv", type, function(error, data) {
  if (error) throw error;

  var g = svg.selectAll(".arc")
      .data(pie(data))
    .enter().append("g")
      .attr("class", "arc");

  g.append("path")
      .attr("d", arc)
      .style("fill", function(d) { return color(d.data.age); });

  g.append("text")
      .attr("transform", function(d) { return "translate(" + labelArc.centroid(d) + ")"; })
      .attr("dy", ".35em")
      .text(function(d) { return d.data.age; });
});

function type(d) {
  d.population = +d.population;
  return d;
}
 */
